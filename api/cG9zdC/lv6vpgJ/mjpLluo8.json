{"title":"快速排序","date":"2019-05-06T07:14:06.000Z","slug":"快速排序","updated":"2019-05-06T07:15:23.907Z","content":"<h1 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1.概述\"></a>1.概述</h1><p>快速排序，听这个名字就能想到它排序速度比较快方法，是一种分治思想，现在各种语言中自带的排序库很多使用的都是快速排序。</p>\n<h6 id=\"空间复杂度\"><a href=\"#空间复杂度\" class=\"headerlink\" title=\"空间复杂度\"></a>空间复杂度</h6><p>快速排序是一种原地排序，只需要一个很小的栈作为辅助空间，空间复杂度为O(log2n)，所以适合在数据集比较大的时候使用。</p>\n<h6 id=\"时间复杂度\"><a href=\"#时间复杂度\" class=\"headerlink\" title=\"时间复杂度\"></a>时间复杂度</h6><p>时间复杂度比较复杂，最好的情况是O(n)，最差的情况是O(n2)，所以平时说的O(nlogn)，为其平均时间复杂度。</p>\n<h1 id=\"2-基本思想\"><a href=\"#2-基本思想\" class=\"headerlink\" title=\"2.基本思想\"></a>2.基本思想</h1><ul>\n<li>从要排序的数据中取一个数为“基准数”。</li>\n<li>通过一趟排序将要排序的数据分割成独立的两部分，其中左边的数据都比“基准数”小，右边的数据都比“基准数”大。</li>\n<li>然后再按步骤2对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。</li>\n</ul>\n<p>该思想可以概括为：挖坑填数 + 分治法</p>\n<h1 id=\"3-代码\"><a href=\"#3-代码\" class=\"headerlink\" title=\"3.代码\"></a>3.代码</h1><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">50005</span>],n;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">qiukSort</span><span class=\"params\">(<span class=\"keyword\">int</span> start,<span class=\"keyword\">int</span> end)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(start&gt;=end)<span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index=a[start];<span class=\"comment\">//取最左边的为基数</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=start;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> j=end;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;j)<span class=\"comment\">//当i=j跳出循环</span></span><br><span class=\"line\">    &#123;      <span class=\"keyword\">while</span>(j&gt;i&amp;&amp;a[j]&gt;=index)<span class=\"comment\">//从右向左找到第一个比index大的数</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          j--;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      a[i]=a[j];</span><br><span class=\"line\">      <span class=\"keyword\">while</span>(i&lt;j&amp;&amp;a[i]&lt;=index)<span class=\"comment\">//从左向右找到第一个比index小的数</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          i++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      a[j]=a[i];    &#125;</span><br><span class=\"line\">      a[i]=index;<span class=\"comment\">//将基数填入最后的坑</span></span><br><span class=\"line\">      qiukSort(start,i<span class=\"number\">-1</span>);</span><br><span class=\"line\">      qiukSort(i+<span class=\"number\">1</span>,end);&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;a[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    qiukSort(<span class=\"number\">0</span>,n<span class=\"number\">-1</span>);</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;n;k++)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"built_in\">cout</span>&lt;&lt;a[k]&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"注：-快速排序，在排完第一遍的时候，你所选择的基准数就是该数在排序序列中的真实位置\"><a href=\"#注：-快速排序，在排完第一遍的时候，你所选择的基准数就是该数在排序序列中的真实位置\" class=\"headerlink\" title=\"注： 快速排序，在排完第一遍的时候，你所选择的基准数就是该数在排序序列中的真实位置\"></a>注： 快速排序，在排完第一遍的时候，你所选择的基准数就是该数在排序序列中的真实位置</h4>","next":{"title":"最近点对问题","slug":"最近点对问题"},"link":"http://starlx.cn/post/快速排序/","toc":[{"title":"1.概述","id":"1-概述","index":"1"},{"title":"2.基本思想","id":"2-基本思想","index":"2"},{"title":"3.代码","id":"3-代码","index":"3"}]}