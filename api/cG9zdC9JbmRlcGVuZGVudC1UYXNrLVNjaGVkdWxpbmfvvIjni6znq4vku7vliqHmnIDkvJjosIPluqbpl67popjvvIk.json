{"title":"Independent Task Scheduling（独立任务最优调度问题）","date":"2019-06-14T05:41:30.000Z","slug":"Independent-Task-Scheduling（独立任务最优调度问题）","updated":"2019-06-14T05:41:55.355Z","content":"<h1 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h1><p>独立任务最优调度，又称双机调度问题：用两台处理机A和B处理n个作业。<br>设第i个作业交给机器A处理时所需要的时间是a[i]，若由机器B来处理，则所需要的时间是b[i]。<br>现在要求每个作业只能由一台机器处理，每台机器都不能同时处理两个作业。<br>设计一个动态规划算法，使得这两台机器处理完这n个作业的时间最短（从任何一台机器开工到最后一台机器停工的总的时间）。</p>\n<h3 id=\"数据输入：\"><a href=\"#数据输入：\" class=\"headerlink\" title=\"数据输入：\"></a>数据输入：</h3><p> n = 6<br>  a[n] = 2 5 7 10 5 2<br>  b[n] = 6 8 4 11 3 4</p>\n<h3 id=\"结果输出：\"><a href=\"#结果输出：\" class=\"headerlink\" title=\"结果输出：\"></a>结果输出：</h3><p>  15</p>\n<h3 id=\"思路：\"><a href=\"#思路：\" class=\"headerlink\" title=\"思路：\"></a>思路：</h3><ul>\n<li><p>当完成k个作业，设机器A花费了x时间，机器B所花费时间的最小值肯定是x的一个函数，</p>\n<ul>\n<li>设F[k][x]表示机器B所花费时间的最小值，则 F[k][x]=Min{ F[k-1][x]+b[k], F[k-1][x-a[k]]<br>}。</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>F[k-1][x]+b[k]表示第k个作业由机器B来处理（完成k-1个作业时机器A花费的时间仍是x，前提就是A机器停机的时间是x）</li>\n</ul>\n<ul>\n<li><p>F[k-1][x-a[k]]表示第k个作业由机器A处理（完成k-1个作业时机器A花费的时间是x-a[k]）。</p>\n</li>\n<li><p>我们可知机器A花费时间x与机器B花费时间F[k][x]中的较大值为AB机器完成任务k的最终时间：Max(x, F[k][x])。</p>\n</li>\n<li><p>当x = 0，1，2……sumA，可得到一串较大值序列，取序列中最小的值即为结果。 </p>\n</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,dp[<span class=\"number\">100005</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sumA=<span class=\"number\">0</span>,ans=<span class=\"number\">999999999</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">205</span>],b[<span class=\"number\">205</span>];</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;a[i];</span><br><span class=\"line\">        sumA+=a[i];</span><br><span class=\"line\">        dp[i]=<span class=\"number\">0</span>;<span class=\"comment\">//初始化</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;b[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;n;k++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=sumA;i&gt;=<span class=\"number\">0</span>;i--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i&gt;=a[k])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                dp[i]=min(dp[i]+b[k],dp[i-a[k]]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> dp[i]=dp[i]+b[k];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=sumA;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> t=max(i,dp[i]);<span class=\"comment\">//取较大的</span></span><br><span class=\"line\">        ans=min(ans,t);<span class=\"comment\">//取较小的</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","next":{"title":"Coin Changing","slug":"Coin-Changing"},"link":"http://starlx.cn/post/Independent-Task-Scheduling（独立任务最优调度问题）/","toc":[{"title":"问题描述：","id":"问题描述：","index":"1"}]}