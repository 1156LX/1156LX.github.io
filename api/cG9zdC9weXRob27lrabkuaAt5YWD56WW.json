{"title":"python学习-元祖","date":"2019-07-16T03:01:36.000Z","slug":"python学习-元祖","updated":"2019-07-16T03:02:06.732Z","content":"<p>Python的元组与列表类似，不同之处在于元组的元素不能修改,元组使用小括号,列表使用方括号,元组创建很简单,只需要在括号中添加元素,并使用逗号隔开即可</p>\n<h1 id=\"一、创建元组\"><a href=\"#一、创建元组\" class=\"headerlink\" title=\"一、创建元组\"></a>一、创建元组</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tup1 = (&apos;physics&apos;, &apos;chemistry&apos;, 1997, 2000);</span><br><span class=\"line\">tup2 = (1, 2, 3, 4, 5 );</span><br><span class=\"line\">tup3 = &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;;</span><br></pre></td></tr></table></figure>\n<p>创建空元组<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tup1 = ();</span><br></pre></td></tr></table></figure></p>\n<p>元组中只包含一个元素时，需要在元素后面添加逗号来消除歧义<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tup1 = (50,);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"二、访问元组\"><a href=\"#二、访问元组\" class=\"headerlink\" title=\"二、访问元组\"></a>二、访问元组</h1><p>元组可以使用下标索引来访问元组中的值，如下实例:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tup1 = (<span class=\"string\">'physics'</span>, <span class=\"string\">'chemistry'</span>, <span class=\"number\">1997</span>, <span class=\"number\">2000</span>);</span><br><span class=\"line\">tup2 = (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span> );</span><br><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">\"tup1[0]: \"</span>, tup1[<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">\"tup2[1:5]: \"</span>, tup2[<span class=\"number\">1</span>:<span class=\"number\">5</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#以上实例输出结果：</span></span><br><span class=\"line\"><span class=\"comment\">#tup1[0]:  physics</span></span><br><span class=\"line\"><span class=\"comment\">#tup2[1:5]:  [2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"三、修改元组\"><a href=\"#三、修改元组\" class=\"headerlink\" title=\"三、修改元组\"></a>三、修改元组</h1><p>元组中的元素值是不允许修改的，但我们可以对元组进行连接组合，如下实例:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tup1 = (<span class=\"number\">12</span>, <span class=\"number\">34.56</span>);</span><br><span class=\"line\">tup2 = (<span class=\"string\">'abc'</span>, <span class=\"string\">'xyz'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#以下修改元组元素操作是非法的。</span></span><br><span class=\"line\"><span class=\"comment\">#tup1[0] = 100;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#创建一个新的元组</span></span><br><span class=\"line\">tup3 = tup1 + tup2;</span><br><span class=\"line\"><span class=\"keyword\">print</span> tup3;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#以上实例输出结果：</span></span><br><span class=\"line\"><span class=\"comment\">#(12, 34.56, 'abc', 'xyz')</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"四、删除元组\"><a href=\"#四、删除元组\" class=\"headerlink\" title=\"四、删除元组\"></a>四、删除元组</h1><p>元组中的元素值是不允许删除的，但我们可以使用del语句来删除整个元组，如下实例:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tup = (<span class=\"string\">'physics'</span>, <span class=\"string\">'chemistry'</span>, <span class=\"number\">1997</span>, <span class=\"number\">2000</span>);</span><br><span class=\"line\"><span class=\"keyword\">print</span> tup;</span><br><span class=\"line\"><span class=\"keyword\">del</span> tup;</span><br><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">\"After deleting tup : \"</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> tup;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#以上实例元组被删除后，输出变量会有异常信息，输出如下所示：</span></span><br><span class=\"line\"><span class=\"comment\">#('physics', 'chemistry', 1997, 2000)</span></span><br><span class=\"line\"><span class=\"comment\">#After deleting tup :</span></span><br><span class=\"line\"><span class=\"comment\">#Traceback (most recent call last):</span></span><br><span class=\"line\"><span class=\"comment\">#File \"test.py\", line 9, in &lt;module&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#print tup;</span></span><br><span class=\"line\"><span class=\"comment\">#NameError: name 'tup' is not defined[/code]</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"五、元组运算符\"><a href=\"#五、元组运算符\" class=\"headerlink\" title=\"五、元组运算符\"></a>五、元组运算符</h1><p>与字符串一样，元组之间可以使用 + 号和 * 号进行运算。这就意味着他们可以组合和复制，运算后会生成一个新的元组。</p>\n<h1 id=\"六、元组内置函数\"><a href=\"#六、元组内置函数\" class=\"headerlink\" title=\"六、元组内置函数\"></a>六、元组内置函数</h1><p>Python元组包含了以下内置函数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、cmp(tuple1, tuple2)：比较两个元组元素。</span><br><span class=\"line\"></span><br><span class=\"line\">2、len(tuple)：计算元组元素个数。</span><br><span class=\"line\"></span><br><span class=\"line\">3、max(tuple)：返回元组中元素最大值。</span><br><span class=\"line\"></span><br><span class=\"line\">4、min(tuple)：返回元组中元素最小值。</span><br><span class=\"line\"></span><br><span class=\"line\">5、tuple(seq)：将列表转换为元组。</span><br></pre></td></tr></table></figure></p>\n","next":{"title":"python学习-数组","slug":"python学习-数组"},"link":"http://starlx.cn/post/python学习-元祖/","toc":[{"title":"一、创建元组","id":"一、创建元组","index":"1"},{"title":"二、访问元组","id":"二、访问元组","index":"2"},{"title":"三、修改元组","id":"三、修改元组","index":"3"},{"title":"四、删除元组","id":"四、删除元组","index":"4"},{"title":"五、元组运算符","id":"五、元组运算符","index":"5"},{"title":"六、元组内置函数","id":"六、元组内置函数","index":"6"}]}